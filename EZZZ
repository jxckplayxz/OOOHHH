loadstring(game:HttpGet('https://raw.githubusercontent.com/qAxAp/Adonis/refs/heads/main/adonisss'))()
local player = game:GetService("Players").LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local tweenService = game:GetService("TweenService")
local userInputService = game:GetService("UserInputService")

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.DisplayOrder = 10

local gradientFrame = Instance.new("Frame")
gradientFrame.Size = UDim2.new(1, 0, 1, 0)
gradientFrame.BackgroundTransparency = 1
gradientFrame.Parent = screenGui

local uIGradient = Instance.new("UIGradient")
uIGradient.Rotation = 90
uIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 100, 255)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 150, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 200, 255))
})
uIGradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0.8),
    NumberSequenceKeypoint.new(1, 0.95)
})
uIGradient.Parent = gradientFrame

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0.4, 0, 0.55, 0)
mainFrame.Position = UDim2.new(0.3, 0, 0.2, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
mainFrame.BorderSizePixel = 0
mainFrame.BackgroundTransparency = 1
mainFrame.Parent = screenGui

local mainCorner = Instance.new("UICorner", mainFrame)
mainCorner.CornerRadius = UDim.new(0, 8)

tweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
    BackgroundTransparency = 0
}):Play()

local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(0.7, 0, 0.9, 0)
contentFrame.Position = UDim2.new(0.3, 0, 0.05, 0)
contentFrame.BackgroundColor3 = Color3.fromRGB(15, 20, 30)
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

local contentCorner = Instance.new("UICorner", contentFrame)
contentCorner.CornerRadius = UDim.new(0, 6)

local contentStroke = Instance.new("UIStroke", contentFrame)
contentStroke.Color = Color3.fromRGB(0, 150, 255)
contentStroke.Thickness = 1
contentStroke.Transparency = 0.7

local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0.15, 0)
titleBar.Position = UDim2.new(0, 0, -0.1, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(15, 20, 30)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner", titleBar)
titleCorner.CornerRadius = UDim.new(0, 4)

local titleGradient = Instance.new("UIGradient", titleBar)
titleGradient.Rotation = 90
titleGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 50, 100)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 100, 150))
})

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(0.8, 0, 1, 0)  
titleLabel.Position = UDim2.new(0.05, 0, 0, 0)  
titleLabel.BackgroundTransparency = 1  
titleLabel.Text = "Voidy X | V2"  
titleLabel.TextColor3 = Color3.fromRGB(150, 220, 255)
titleLabel.TextSize = 14  
titleLabel.TextXAlignment = Enum.TextXAlignment.Left  
titleLabel.Font = Enum.Font.GothamBlack

local titleGlow = Instance.new("TextLabel", titleBar)
titleGlow.Size = titleLabel.Size
titleGlow.Position = titleLabel.Position
titleGlow.BackgroundTransparency = 1
titleGlow.Text = titleLabel.Text
titleGlow.TextColor3 = Color3.fromRGB(0, 150, 255)
titleGlow.TextTransparency = 0.7
titleGlow.TextSize = titleLabel.TextSize
titleGlow.TextXAlignment = titleLabel.TextXAlignment
titleGlow.Font = titleLabel.Font
titleGlow.ZIndex = titleLabel.ZIndex - 1

local closeButton = Instance.new("TextButton", titleBar)
closeButton.Size = UDim2.new(0, 15, 0, 15)
closeButton.Position = UDim2.new(0.95, 0, 0.5, -7.5)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
closeButton.Text = ""
closeButton.AutoButtonColor = false
Instance.new("UICorner", closeButton).CornerRadius = UDim.new(1, 0)

closeButton.MouseEnter:Connect(function()
    tweenService:Create(closeButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(255, 80, 80),
        Size = UDim2.new(0, 17, 0, 17),
        Position = UDim2.new(0.95, -1, 0.5, -8.5)
    }):Play()
end)

closeButton.MouseLeave:Connect(function()
    tweenService:Create(closeButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(255, 50, 50),
        Size = UDim2.new(0, 15, 0, 15),
        Position = UDim2.new(0.95, 0, 0.5, -7.5)
    }):Play()
end)

local minimizeButton = Instance.new("TextButton", titleBar)
minimizeButton.Size = UDim2.new(0, 15, 0, 15)
minimizeButton.Position = UDim2.new(0.9, 0, 0.5, -7.5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
minimizeButton.Text = ""
minimizeButton.AutoButtonColor = false
Instance.new("UICorner", minimizeButton).CornerRadius = UDim.new(1, 0)

minimizeButton.MouseEnter:Connect(function()
    tweenService:Create(minimizeButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(0, 180, 255),
        Size = UDim2.new(0, 17, 0, 17),
        Position = UDim2.new(0.9, -1, 0.5, -8.5)
    }):Play()
end)

minimizeButton.MouseLeave:Connect(function()
    tweenService:Create(minimizeButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(0, 150, 255),
        Size = UDim2.new(0, 15, 0, 15),
        Position = UDim2.new(0.9, 0, 0.5, -7.5)
    }):Play()
end)

local tabsFrame = Instance.new("Frame")
tabsFrame.Size = UDim2.new(0.25, 0, 0.9, 0)
tabsFrame.Position = UDim2.new(0.025, 0, 0.05, 0)
tabsFrame.BackgroundColor3 = Color3.fromRGB(15, 20, 30)
tabsFrame.BorderSizePixel = 0
tabsFrame.Parent = mainFrame
Instance.new("UICorner", tabsFrame).CornerRadius = UDim.new(0, 6)

local tabsStroke = Instance.new("UIStroke", tabsFrame)
tabsStroke.Color = Color3.fromRGB(0, 100, 200)
tabsStroke.Thickness = 1
tabsStroke.Transparency = 0.8

local tabsListLayout = Instance.new("UIListLayout", tabsFrame)
tabsListLayout.FillDirection = Enum.FillDirection.Vertical
tabsListLayout.Padding = UDim.new(0, 8)
tabsListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

local mainHighlight, gamesHighlight, settingsHighlight, playerHighlight

local function createTab(name)
    local tab = Instance.new("TextButton")
    tab.Size = UDim2.new(0.9, 0, 0, 30)
    tab.BackgroundColor3 = Color3.fromRGB(30, 40, 50)
    tab.Text = name
    tab.TextColor3 = Color3.fromRGB(200, 230, 255)
    tab.TextSize = 12
    tab.Font = Enum.Font.GothamMedium
    tab.AutoButtonColor = false
    tab.Parent = tabsFrame

    local corner = Instance.new("UICorner", tab)
    corner.CornerRadius = UDim.new(0, 4)

    local highlight = Instance.new("Frame", tab)
    highlight.Size = UDim2.new(0, 3, 0.8, 0)
    highlight.Position = UDim2.new(0, -3, 0.1, 0)
    highlight.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    highlight.BorderSizePixel = 0
    highlight.Visible = false
    Instance.new("UICorner", highlight).CornerRadius = UDim.new(0, 2)

    tab.MouseEnter:Connect(function()
        tweenService:Create(tab, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(35, 45, 55),
            TextColor3 = Color3.fromRGB(220, 240, 255)
        }):Play()
    end)

    tab.MouseLeave:Connect(function()
        tweenService:Create(tab, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(30, 40, 50),
            TextColor3 = Color3.fromRGB(200, 230, 255)
        }):Play()
    end)

    return tab, highlight
end

local mainTab, mainHighlight = createTab("Main")
local gamesTab, gamesHighlight = createTab("Games")
local settingsTab, settingsHighlight = createTab("Settings")
local playerTab, playerHighlight = createTab("Player")

local function setActiveTab(highlight)
    mainHighlight.Visible = false
    gamesHighlight.Visible = false
    settingsHighlight.Visible = false
    playerHighlight.Visible = false

    if highlight then
        highlight.Visible = true
        highlight.BackgroundTransparency = 1
        tweenService:Create(highlight, TweenInfo.new(0.3), {
            BackgroundTransparency = 0
        }):Play()
    end
end

local function createContentPanel(isMainTab)
    if isMainTab then
        local panel = Instance.new("Frame", contentFrame)
        panel.Size = UDim2.new(1, 0, 1, 0)
        panel.BackgroundTransparency = 1
        panel.Visible = false
        return panel
    else
        local panel = Instance.new("ScrollingFrame", contentFrame)
        panel.Size = UDim2.new(1, 0, 1, 0)
        panel.BackgroundTransparency = 1
        panel.BorderSizePixel = 0
        panel.Visible = false
        panel.ScrollBarThickness = 5
        panel.AutomaticCanvasSize = Enum.AutomaticSize.Y
        panel.ScrollingDirection = Enum.ScrollingDirection.Y
        panel.CanvasSize = UDim2.new(0, 0, 0, 0)

        local padding = Instance.new("UIPadding", panel)
        padding.PaddingBottom = UDim.new(0, 10)

        local layout = Instance.new("UIListLayout", panel)
        layout.FillDirection = Enum.FillDirection.Vertical
        layout.Padding = UDim.new(0, 5)

        layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            panel.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
        end)
        
        return panel
    end
end

local mainPanel = createContentPanel(true)  
local gamesPanel = createContentPanel(false)
local settingsPanel = createContentPanel(false)
local playerPanel = createContentPanel(false)

local welcomeLabel = Instance.new("TextLabel", mainPanel)
welcomeLabel.Size = UDim2.new(1, 0, 0, 50)
welcomeLabel.Position = UDim2.new(0, 0, 0.1, 0)
welcomeLabel.BackgroundTransparency = 1
welcomeLabel.Text = "Welcome to Voidy X"
welcomeLabel.TextColor3 = Color3.fromRGB(150, 220, 255)
welcomeLabel.TextSize = 18
welcomeLabel.Font = Enum.Font.GothamBlack

local welcomeGlow = Instance.new("TextLabel", mainPanel)
welcomeGlow.Size = welcomeLabel.Size
welcomeGlow.Position = welcomeLabel.Position
welcomeGlow.BackgroundTransparency = 1
welcomeGlow.Text = welcomeLabel.Text
welcomeGlow.TextColor3 = Color3.fromRGB(0, 150, 255)
welcomeGlow.TextTransparency = 0.7
welcomeGlow.TextSize = welcomeLabel.TextSize
welcomeGlow.Font = welcomeLabel.Font
welcomeGlow.ZIndex = welcomeLabel.ZIndex - 1

local descriptionLabel = Instance.new("TextLabel", mainPanel)
descriptionLabel.Size = UDim2.new(0.8, 0, 0, 100)
descriptionLabel.Position = UDim2.new(0.05, -0.5, 0.2, 0)
descriptionLabel.BackgroundTransparency = 1
descriptionLabel.Text = "The best scripthub out!!"
descriptionLabel.TextColor3 = Color3.fromRGB(150, 220, 255)
descriptionLabel.TextSize = 16
descriptionLabel.TextWrapped = true
descriptionLabel.Font = Enum.Font.GothamBold

local glow = Instance.new("TextLabel", mainPanel)
glow.Size = descriptionLabel.Size
glow.Position = UDim2.new(0.05, -0.4, 0.2, 0)
glow.BackgroundTransparency = 1
glow.Text = descriptionLabel.Text
glow.TextColor3 = Color3.fromRGB(0, 150, 255)
glow.TextTransparency = 0.7
glow.TextSize = descriptionLabel.TextSize
glow.Font = descriptionLabel.Font

local line = Instance.new("Frame", descriptionLabel)
line.Size = UDim2.new(0.6, 0, 0, 2)
line.Position = UDim2.new(0.25, -1, 0.2, 0)
line.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
line.BorderSizePixel = 0

local lineTween = tweenService:Create(line, TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, -1, true), {
    BackgroundTransparency = 0.5,
    Size = UDim2.new(0.7, 0, 0, 2)
})
lineTween:Play()

local gameScripts = {
    ["Blox Fruits"] = {
        {Name = "Alchemy Hub", Script = "loadstring(game:HttpGet('https://scripts.alchemyhub.xyz'))()"},
        {Name = "Speed Hub X", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua'))()"},
        {Name = "Raito Hub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Efe0626/RaitoHub/main/Script'))()"},
        {Name = "HoHoHub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/ascn123/HOHO_H/main/Loading_UI'))()"},
        {Name = "Ronix Hub", Script = "loadstring(game:HttpGet('https://api.luarmor.net/files/v3/loaders/fe9186f93ffe4000120ba5db7ef9443b.lua'))()"}
    },
    ["Brookhaven RP"] = {
        {Name = "Hydrogen (2025)", Script = "loadstring(game:HttpGet('https://link-hub.net/487612/hydrogen-brookhaven'))()", Note = "Requires Key"}, 
        {Name = "Vynixu's Script", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Vynixu/Utilities/main/Brookhaven.lua'))()"},
        {Name = "SanderX", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/sXPiterXs1111/SanderXNewUpdate3.1.lua/main/SanderXNewUpdate.lua'))()"}
    },
    ["Pet Simulator 99"] = {
        {Name = "Turtle Hub (PS99)", Script = "loadstring(game:HttpGet('https://scriptblox.com/raw/PS99-Turtle-Hub-2025-11245'))()"},
        {Name = "OP Pet Sim 99", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/OP-PetSim99/Official/main/Loader.lua'))()"} 
    },
    ["Arsenal"] = {
        {Name = "DioHub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/qAxAp/Arsenal-Aimbot/refs/heads/main/Aimbott'))()"}
    },
    ["Murder Mystery 2"] = {
        {Name = "MM hub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Murder%20Mystery'))()"},
        {Name = "Maids hub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/1andonlymars/MarsHub/main/MM2'))()"}
    },
    ["BedWars"] = {
        {Name = "Vape", Script = "loadstring(game:HttpGet('https://qpvape.org'))()"},
        {Name = "DarkHub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/VapeVoidware/VWPacket/main/NewMainScript.lua'))()"}
    },
    ["Muscle Legends"] = {
        {Name = "Auto Farm", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/harisiskandar178/Roblox-Script/main/Muscle%20Legend'))()"},
    },
    ["Doors"] = {
        {Name = "DOORS HUB (2025)", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Doors-Hub/Doors-Hub/main/Loader.lua'))()"}, 
        {Name = "MSpaint", Script = 'loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/002c19202c9946e6047b0c6e0ad51f84.lua"))()'}
    },
    ["TSB"] = {
        {Name = "Phantasm", Script = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/ATrainz/Phantasm/refs/heads/main/Games/TSB.lua"))()'}
    }, 
    ["Universal"] = {
        {Name = "Infinite Yield", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()"},
        {Name = "Nameless admin", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()"},
        {Name = "Fly gui", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt'))()"},
        {Name = "Evarge Hub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt'))()"},
    },
    ["Coming soon.."] = {
        {Name = "Coming soon..", Script = "loadstring(game:HttpGet('https://example.com'))()"}
    },
    ["Coming soon..."] = {
        {Name = "Coming soon...", Script = "loadstring(game:HttpGet('https://example.com'))()"}
    },
    ["Coming soon...."] = {
        {Name = "Coming soon...", Script = "loadstring(game:HttpGet('https://example.com'))()"}
    },
    ["Coming soon....."] = {
        {Name = "Coming soon...", Script = "loadstring(game:HttpGet('https://example.com'))()"}
    }
}

local function createGameDropdowns()
    for _, child in ipairs(gamesPanel:GetChildren()) do
        if not child:IsA("UIListLayout") and not child:IsA("UIPadding") then
            child:Destroy()
        end
    end

    local gameNames = {
        "Blox Fruits", "Brookhaven RP", "Pet Simulator 99", 
        "Arsenal", "Murder Mystery 2", 
        "Muscle Legends", "BedWars", "Doors", "TSB", "Universal", "Coming soon..",
        "Coming soon...", "Coming soon....", "Coming soon....."

    }

    local allDropdowns = {}

    for _, gameName in ipairs(gameNames) do
        local dropdownContainer = Instance.new("Frame")
        dropdownContainer.Size = UDim2.new(1, -10, 0, 35)
        dropdownContainer.BackgroundTransparency = 1
        dropdownContainer.Parent = gamesPanel
        table.insert(allDropdowns, dropdownContainer)

        local dropdownButton = Instance.new("TextButton")
        dropdownButton.Size = UDim2.new(1, 0, 1, 0)
        dropdownButton.BackgroundColor3 = Color3.fromRGB(38, 62, 87)
        dropdownButton.Text = "  "..gameName
        dropdownButton.TextColor3 = Color3.fromRGB(200, 230, 255) 
        dropdownButton.TextSize = 12
        dropdownButton.TextXAlignment = Enum.TextXAlignment.Left
        dropdownButton.ZIndex = 2
        dropdownButton.Parent = dropdownContainer

        local dropdownCorner = Instance.new("UICorner")
        dropdownCorner.CornerRadius = UDim.new(0, 4)
        dropdownCorner.Parent = dropdownButton

        local arrow = Instance.new("ImageLabel")
        arrow.Name = "Arrow"
        arrow.Size = UDim2.new(0, 12, 0, 12)
        arrow.Position = UDim2.new(1, -25, 0.5, -6)
        arrow.BackgroundTransparency = 1
        arrow.Image = "rbxassetid://71659683"
        arrow.ImageColor3 = Color3.fromRGB(150, 220, 255) 
        arrow.ZIndex = 2
        arrow.Parent = dropdownButton

        local dropdownContent = Instance.new("Frame")
        dropdownContent.Name = "DropdownContent"
        dropdownContent.Size = UDim2.new(1, 0, 0, 0)
        dropdownContent.Position = UDim2.new(0, 0, 1, 5)
        dropdownContent.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        dropdownContent.BorderSizePixel = 0
        dropdownContent.ClipsDescendants = true
        dropdownContent.ZIndex = 3
        dropdownContent.Parent = dropdownContainer

        local dropdownContentCorner = Instance.new("UICorner")
        dropdownContentCorner.CornerRadius = UDim.new(0, 4)
        dropdownContentCorner.Parent = dropdownContent

        local dropdownContentLayout = Instance.new("UIListLayout")
        dropdownContentLayout.FillDirection = Enum.FillDirection.Vertical
        dropdownContentLayout.Padding = UDim.new(0, 2)  
        dropdownContentLayout.Parent = dropdownContent

        local scripts = gameScripts[gameName] or {}
        local totalSize = 0
        
        for _, scriptData in ipairs(scripts) do
            local scriptButton = Instance.new("TextButton")
            scriptButton.Size = UDim2.new(1, -10, 0, 30)
            scriptButton.Position = UDim2.new(0, 5, 0, 0)
            scriptButton.BackgroundColor3 = Color3.fromRGB(30, 40, 50)
            scriptButton.Text = "  "..scriptData.Name
            scriptButton.TextColor3 = Color3.fromRGB(200, 230, 255) 
            scriptButton.TextSize = 11
            scriptButton.TextXAlignment = Enum.TextXAlignment.Left
            scriptButton.ZIndex = 4
            scriptButton.Parent = dropdownContent

            local scriptButtonCorner = Instance.new("UICorner")
            scriptButtonCorner.CornerRadius = UDim.new(0, 4)
            scriptButtonCorner.Parent = scriptButton

            local accent = Instance.new("Frame", scriptButton)
            accent.Size = UDim2.new(0, 3, 0.8, 0)
            accent.Position = UDim2.new(0, -3, 0.1, 0)
            accent.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
            accent.BorderSizePixel = 0
            Instance.new("UICorner", accent).CornerRadius = UDim.new(0, 2)

            scriptButton.MouseButton1Click:Connect(function()
                loadstring(scriptData.Script)()
            end)
            
            totalSize = totalSize + 32  
        end

        dropdownButton.MouseButton1Click:Connect(function()
            for _, otherDropdown in ipairs(allDropdowns) do
                if otherDropdown ~= dropdownContainer then
                    local content = otherDropdown:FindFirstChild("DropdownContent")
                    if content then
                        content.Size = UDim2.new(1, 0, 0, 0)
                        local arrow = otherDropdown:FindFirstChild("Arrow", true)
                        if arrow then
                            arrow.Rotation = 0
                        end
                    end
                end
            end

            local isOpen = dropdownContent.Size.Y.Offset > 0
            if isOpen then
                dropdownContent:TweenSize(
                    UDim2.new(1, 0, 0, 0),
                    Enum.EasingDirection.Out,
                    Enum.EasingStyle.Quad,
                    0.2,
                    true
                )
                arrow.Rotation = 0
            else
                dropdownContent:TweenSize(
                    UDim2.new(1, 0, 0, totalSize),
                    Enum.EasingDirection.Out,
                    Enum.EasingStyle.Quad,
                    0.2,
                    true
                )
                arrow.Rotation = 180
            end
        end)
    end
end

local afkEnabled = false
local afkThread = nil

local function simulateActivity()
    while afkEnabled do
        local vrService = game:GetService("VRService")
        if not vrService.VREnabled then
            local camera = workspace.CurrentCamera
            if camera then
                local oldPos = camera.CFrame
                camera.CFrame = oldPos * CFrame.Angles(0, math.rad(0.1), 0)
                wait(0.1)
                camera.CFrame = oldPos
            end
        end

        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F13, false, game)
        wait(0.1)
        game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.F13, false, game)

        wait(25)
    end
end

local afkContainer = Instance.new("Frame", settingsPanel)
afkContainer.Size = UDim2.new(1, 0, 0, 60)
afkContainer.BackgroundTransparency = 1

local afkButton = Instance.new("TextButton", afkContainer)
afkButton.Size = UDim2.new(0.8, 0, 0, 40)
afkButton.Position = UDim2.new(0.1, 0, 0, 10)
afkButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
afkButton.TextColor3 = Color3.fromRGB(200, 230, 255)
afkButton.Text = "Enable AFK Mode"
afkButton.TextSize = 14
Instance.new("UICorner", afkButton).CornerRadius = UDim.new(0, 4)

local afkStatus = Instance.new("TextLabel", afkContainer)
afkStatus.Size = UDim2.new(0.8, 0, 0, 20)
afkStatus.Position = UDim2.new(0.1, 0, 0, 50)
afkStatus.BackgroundTransparency = 1
afkStatus.Text = "Status: Disabled"
afkStatus.TextColor3 = Color3.fromRGB(180, 220, 255)
afkStatus.TextSize = 12
afkStatus.TextXAlignment = Enum.TextXAlignment.Left

afkButton.MouseButton1Click:Connect(function()
    afkEnabled = not afkEnabled

    if afkEnabled then
        afkButton.Text = "Disable AFK Mode"
        afkButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        afkStatus.Text = "Status: Enabled"
        afkThread = coroutine.create(simulateActivity)
        coroutine.resume(afkThread)
    else
        afkButton.Text = "Enable AFK Mode"
        afkButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        afkStatus.Text = "Status: Disabled"
        if afkThread then
            coroutine.close(afkThread)
        end
    end
end)

local playerTitle = Instance.new("TextLabel", playerPanel)
playerTitle.Size = UDim2.new(1, 0, 0, 30)
playerTitle.Text = "."
playerTitle.TextColor3 = Color3.fromRGB(150, 220, 255)
playerTitle.TextSize = 18
playerTitle.Font = Enum.Font.GothamBold
playerTitle.BackgroundTransparency = 1
playerTitle.TextXAlignment = Enum.TextXAlignment.Left

local function createSlider(parent, name, min, max, default, property)
    local container = Instance.new("Frame", parent)
    container.Size = UDim2.new(1, 0, 0, 60)  
    container.BackgroundTransparency = 1

    local label = Instance.new("TextLabel", container)
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, 0)  
    label.BackgroundTransparency = 1
    label.Text = name..": "..default
    label.TextColor3 = Color3.fromRGB(180, 220, 255)
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left

    local slider = Instance.new("Frame", container)
    slider.Size = UDim2.new(1, 0, 0, 20)
    slider.Position = UDim2.new(0, 0, 0, 25)  
    slider.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    Instance.new("UICorner", slider).CornerRadius = UDim.new(0, 4)

    local fill = Instance.new("Frame", slider)
    fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    Instance.new("UICorner", fill).CornerRadius = UDim.new(0, 4)

    local button = Instance.new("TextButton", slider)
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundTransparency = 1
    button.Text = ""

    local currentValue = default
    local isDragging = false

    local function setValue(value)
        currentValue = math.clamp(math.floor(value), min, max)
        local percentage = (currentValue - min) / (max - min)
        tweenService:Create(fill, TweenInfo.new(0.1), {Size = UDim2.new(percentage, 0, 1, 0)}):Play()
        label.Text = name..": "..currentValue

        local character = player.Character
        if character and character:FindFirstChildOfClass("Humanoid") then
            character:FindFirstChildOfClass("Humanoid")[property] = currentValue
        end
    end

    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            isDragging = true
            local sliderAbsPos = slider.AbsolutePosition.X
            local sliderAbsSize = slider.AbsoluteSize.X
            local inputX = input.UserInputType == Enum.UserInputType.Touch and input.Position.X or input.Position.X
            local mouseX = math.clamp(inputX, sliderAbsPos, sliderAbsPos + sliderAbsSize)
            local percentage = (mouseX - sliderAbsPos) / sliderAbsSize
            setValue(min + (max - min) * percentage)
        end
    end)

    userInputService.InputChanged:Connect(function(input)
        if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
                          input.UserInputType == Enum.UserInputType.Touch) then
            local sliderAbsPos = slider.AbsolutePosition.X
            local sliderAbsSize = slider.AbsoluteSize.X
            local inputX = input.UserInputType == Enum.UserInputType.Touch and input.Position.X or input.Position.X
            local mouseX = math.clamp(inputX, sliderAbsPos, sliderAbsPos + sliderAbsSize)
            local percentage = (mouseX - sliderAbsPos) / sliderAbsSize
            setValue(min + (max - min) * percentage)
        end
    end)

    userInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            isDragging = false
        end
    end)

    player.CharacterAdded:Connect(function(character)
        local humanoid = character:WaitForChildOfClass("Humanoid")
        humanoid[property] = currentValue
    end)
end

createSlider(playerPanel, "Walk Speed", 16, 50, 16, "WalkSpeed")
createSlider(playerPanel, "Jump Height", 50, 200, 50, "JumpPower")

local isInfiniteJumpEnabled = false
local infiniteJumpConnection

local toggleContainer = Instance.new("Frame", playerPanel)
toggleContainer.Size = UDim2.new(1, 0, 0, 30)
toggleContainer.BackgroundTransparency = 1

local toggleButton = Instance.new("TextButton", toggleContainer)
toggleButton.Size = UDim2.new(0, 20, 0, 20)
toggleButton.Position = UDim2.new(0, 0, 0, 5)
toggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
toggleButton.Text = ""
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 4)

local toggleLabel = Instance.new("TextLabel", toggleContainer)
toggleLabel.Size = UDim2.new(1, -25, 1, 0)
toggleLabel.Position = UDim2.new(0, 25, 0, 0)
toggleLabel.BackgroundTransparency = 1
toggleLabel.Text = "Infinite Jump"
toggleLabel.TextColor3 = Color3.fromRGB(180, 220, 255)
toggleLabel.TextSize = 12
toggleLabel.TextXAlignment = Enum.TextXAlignment.Left

local function enableInfiniteJump()
    if infiniteJumpConnection then infiniteJumpConnection:Disconnect() end
    infiniteJumpConnection = userInputService.JumpRequest:Connect(function()
        if isInfiniteJumpEnabled then
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)
end

toggleButton.MouseButton1Click:Connect(function()
    isInfiniteJumpEnabled = not isInfiniteJumpEnabled
    toggleButton.BackgroundColor3 = isInfiniteJumpEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(45, 45, 45)
    if isInfiniteJumpEnabled then
        enableInfiniteJump()
    elseif infiniteJumpConnection then
        infiniteJumpConnection:Disconnect()
    end
end)

player.CharacterAdded:Connect(function()
    if isInfiniteJumpEnabled then enableInfiniteJump() end
end)

local function switchToTab(panel, highlight)
    for _, p in pairs({mainPanel, gamesPanel, settingsPanel, playerPanel}) do
        if p.Visible then
            tweenService:Create(p, TweenInfo.new(0.2), {
                BackgroundTransparency = 1
            }):Play()
            wait(0.2)
            p.Visible = false
        end
    end

    setActiveTab(highlight)
    panel.Visible = true

    if panel == gamesPanel then
        createGameDropdowns()
    end
end

mainTab.MouseButton1Click:Connect(function()
    switchToTab(mainPanel, mainHighlight)
end)

gamesTab.MouseButton1Click:Connect(function()
    switchToTab(gamesPanel, gamesHighlight)
end)

settingsTab.MouseButton1Click:Connect(function()
    switchToTab(settingsPanel, settingsHighlight)
end)

playerTab.MouseButton1Click:Connect(function()
    switchToTab(playerPanel, playerHighlight)
end)

local dragInput, dragStart, startPos

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragStart = input.Position
        startPos = mainFrame.Position

        tweenService:Create(titleBar, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(20, 50, 80)
        }):Play()

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragStart = nil
                tweenService:Create(titleBar, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(15, 20, 30)
                }):Play()
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

userInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragStart then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        contentFrame.Visible = false
        tabsFrame.Visible = false
        mainFrame.BackgroundTransparency = 1
    else
        contentFrame.Visible = true
        tabsFrame.Visible = true
        mainFrame.BackgroundTransparency = 0
    end
end)

closeButton.MouseButton1Click:Connect(function()
    tweenService:Create(mainFrame, TweenInfo.new(0.3), {
        BackgroundTransparency = 1
    }):Play()
    tweenService:Create(titleBar, TweenInfo.new(0.3), {
        BackgroundTransparency = 1
    }):Play()
    tweenService:Create(gradientFrame, TweenInfo.new(0.3), {
        BackgroundTransparency = 1
    }):Play()

    wait(0.3)
    if infiniteJumpConnection then infiniteJumpConnection:Disconnect() end
    screenGui:Destroy()
end)

switchToTab(mainPanel, mainHighlight)      
